version: "3.8"
services:
  server:
    build:
      context: controller-backend
      dockerfile: Dockerfile
    environment:
      dbuser: "${dbuser}"
      dbpass: "${dbpass}"
      dbname: "${dbname}"
      dburi: "${dburi}"
      dbport: "${dbport}"
      grpcport: "${grpcport}"
      restport: "${restport}"
    ports:
      - "${grpcport}:${grpcport}"
      - "${restport}:${restport}"
    networks:
      ncr-network:
        aliases:
          - server
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14.0
    ports:
      - "${dbpublishport}:5432"
    volumes:
      - ./db/sqlc/migration/000001_init_schema.up.sql:/docker-entrypoint-initdb.d/init_schema.sql
#      - ./_postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "${dbpass}"
      POSTGRES_USER: "${dbuser}"
      POSTGRES_DB: "${dbname}"
    networks:
      ncr-network:
        aliases:
          - db
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${dbname}", "-U", "${dbuser}" ]
      interval: 3s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:4
    ports:
      - 8081:8080
    networks:
      ncr-network:
        aliases:
          - adminer

networks:
  ncr-network:
    driver: bridge